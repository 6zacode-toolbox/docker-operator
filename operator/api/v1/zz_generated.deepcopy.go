//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2023 6zacode-toolbox.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientInfo) DeepCopyInto(out *ClientInfo) {
	*out = *in
	if in.Plugins != nil {
		in, out := &in.Plugins, &out.Plugins
		*out = make([]Plugins, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientInfo.
func (in *ClientInfo) DeepCopy() *ClientInfo {
	if in == nil {
		return nil
	}
	out := new(ClientInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerdCommit) DeepCopyInto(out *ContainerdCommit) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerdCommit.
func (in *ContainerdCommit) DeepCopy() *ContainerdCommit {
	if in == nil {
		return nil
	}
	out := new(ContainerdCommit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrdDefinition) DeepCopyInto(out *CrdDefinition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrdDefinition.
func (in *CrdDefinition) DeepCopy() *CrdDefinition {
	if in == nil {
		return nil
	}
	out := new(CrdDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerComposeRunner) DeepCopyInto(out *DockerComposeRunner) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerComposeRunner.
func (in *DockerComposeRunner) DeepCopy() *DockerComposeRunner {
	if in == nil {
		return nil
	}
	out := new(DockerComposeRunner)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DockerComposeRunner) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerComposeRunnerList) DeepCopyInto(out *DockerComposeRunnerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DockerComposeRunner, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerComposeRunnerList.
func (in *DockerComposeRunnerList) DeepCopy() *DockerComposeRunnerList {
	if in == nil {
		return nil
	}
	out := new(DockerComposeRunnerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DockerComposeRunnerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerComposeRunnerSpec) DeepCopyInto(out *DockerComposeRunnerSpec) {
	*out = *in
	if in.MountVars != nil {
		in, out := &in.MountVars, &out.MountVars
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerComposeRunnerSpec.
func (in *DockerComposeRunnerSpec) DeepCopy() *DockerComposeRunnerSpec {
	if in == nil {
		return nil
	}
	out := new(DockerComposeRunnerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerComposeRunnerStatus) DeepCopyInto(out *DockerComposeRunnerStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerComposeRunnerStatus.
func (in *DockerComposeRunnerStatus) DeepCopy() *DockerComposeRunnerStatus {
	if in == nil {
		return nil
	}
	out := new(DockerComposeRunnerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerContainerSummary) DeepCopyInto(out *DockerContainerSummary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerContainerSummary.
func (in *DockerContainerSummary) DeepCopy() *DockerContainerSummary {
	if in == nil {
		return nil
	}
	out := new(DockerContainerSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerHost) DeepCopyInto(out *DockerHost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerHost.
func (in *DockerHost) DeepCopy() *DockerHost {
	if in == nil {
		return nil
	}
	out := new(DockerHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DockerHost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerHostList) DeepCopyInto(out *DockerHostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DockerHost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerHostList.
func (in *DockerHostList) DeepCopy() *DockerHostList {
	if in == nil {
		return nil
	}
	out := new(DockerHostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DockerHostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerHostSpec) DeepCopyInto(out *DockerHostSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerHostSpec.
func (in *DockerHostSpec) DeepCopy() *DockerHostSpec {
	if in == nil {
		return nil
	}
	out := new(DockerHostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerHostStatus) DeepCopyInto(out *DockerHostStatus) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]DockerContainerSummary, len(*in))
		copy(*out, *in)
	}
	in.DockerHost.DeepCopyInto(&out.DockerHost)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerHostStatus.
func (in *DockerHostStatus) DeepCopy() *DockerHostStatus {
	if in == nil {
		return nil
	}
	out := new(DockerHostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerInfo) DeepCopyInto(out *DockerInfo) {
	*out = *in
	in.Plugins.DeepCopyInto(&out.Plugins)
	in.RegistryConfig.DeepCopyInto(&out.RegistryConfig)
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Runtimes = in.Runtimes
	in.Swarm.DeepCopyInto(&out.Swarm)
	out.ContainerdCommit = in.ContainerdCommit
	out.RuncCommit = in.RuncCommit
	out.InitCommit = in.InitCommit
	if in.SecurityOptions != nil {
		in, out := &in.SecurityOptions, &out.SecurityOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.ClientInfo.DeepCopyInto(&out.ClientInfo)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerInfo.
func (in *DockerInfo) DeepCopy() *DockerInfo {
	if in == nil {
		return nil
	}
	out := new(DockerInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerIo) DeepCopyInto(out *DockerIo) {
	*out = *in
	if in.Mirrors != nil {
		in, out := &in.Mirrors, &out.Mirrors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerIo.
func (in *DockerIo) DeepCopy() *DockerIo {
	if in == nil {
		return nil
	}
	out := new(DockerIo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPlugins) DeepCopyInto(out *HostPlugins) {
	*out = *in
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPlugins.
func (in *HostPlugins) DeepCopy() *HostPlugins {
	if in == nil {
		return nil
	}
	out := new(HostPlugins)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HubproxyDockerInternal5000) DeepCopyInto(out *HubproxyDockerInternal5000) {
	*out = *in
	if in.Mirrors != nil {
		in, out := &in.Mirrors, &out.Mirrors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HubproxyDockerInternal5000.
func (in *HubproxyDockerInternal5000) DeepCopy() *HubproxyDockerInternal5000 {
	if in == nil {
		return nil
	}
	out := new(HubproxyDockerInternal5000)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexConfigs) DeepCopyInto(out *IndexConfigs) {
	*out = *in
	in.DockerIo.DeepCopyInto(&out.DockerIo)
	in.HubproxyDockerInternal5000.DeepCopyInto(&out.HubproxyDockerInternal5000)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexConfigs.
func (in *IndexConfigs) DeepCopy() *IndexConfigs {
	if in == nil {
		return nil
	}
	out := new(IndexConfigs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitCommit) DeepCopyInto(out *InitCommit) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitCommit.
func (in *InitCommit) DeepCopy() *InitCommit {
	if in == nil {
		return nil
	}
	out := new(InitCommit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IoContainerdRuncV2) DeepCopyInto(out *IoContainerdRuncV2) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IoContainerdRuncV2.
func (in *IoContainerdRuncV2) DeepCopy() *IoContainerdRuncV2 {
	if in == nil {
		return nil
	}
	out := new(IoContainerdRuncV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IoContainerdRuntimeV1Linux) DeepCopyInto(out *IoContainerdRuntimeV1Linux) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IoContainerdRuntimeV1Linux.
func (in *IoContainerdRuntimeV1Linux) DeepCopy() *IoContainerdRuntimeV1Linux {
	if in == nil {
		return nil
	}
	out := new(IoContainerdRuntimeV1Linux)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Plugins) DeepCopyInto(out *Plugins) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Plugins.
func (in *Plugins) DeepCopy() *Plugins {
	if in == nil {
		return nil
	}
	out := new(Plugins)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryConfig) DeepCopyInto(out *RegistryConfig) {
	*out = *in
	if in.AllowNondistributableArtifactsCIDRs != nil {
		in, out := &in.AllowNondistributableArtifactsCIDRs, &out.AllowNondistributableArtifactsCIDRs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowNondistributableArtifactsHostnames != nil {
		in, out := &in.AllowNondistributableArtifactsHostnames, &out.AllowNondistributableArtifactsHostnames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InsecureRegistryCIDRs != nil {
		in, out := &in.InsecureRegistryCIDRs, &out.InsecureRegistryCIDRs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.IndexConfigs.DeepCopyInto(&out.IndexConfigs)
	if in.Mirrors != nil {
		in, out := &in.Mirrors, &out.Mirrors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryConfig.
func (in *RegistryConfig) DeepCopy() *RegistryConfig {
	if in == nil {
		return nil
	}
	out := new(RegistryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Runc) DeepCopyInto(out *Runc) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Runc.
func (in *Runc) DeepCopy() *Runc {
	if in == nil {
		return nil
	}
	out := new(Runc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuncCommit) DeepCopyInto(out *RuncCommit) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuncCommit.
func (in *RuncCommit) DeepCopy() *RuncCommit {
	if in == nil {
		return nil
	}
	out := new(RuncCommit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Runtimes) DeepCopyInto(out *Runtimes) {
	*out = *in
	out.IoContainerdRuncV2 = in.IoContainerdRuncV2
	out.IoContainerdRuntimeV1Linux = in.IoContainerdRuntimeV1Linux
	out.Runc = in.Runc
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Runtimes.
func (in *Runtimes) DeepCopy() *Runtimes {
	if in == nil {
		return nil
	}
	out := new(Runtimes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Swarm) DeepCopyInto(out *Swarm) {
	*out = *in
	if in.RemoteManagers != nil {
		in, out := &in.RemoteManagers, &out.RemoteManagers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Swarm.
func (in *Swarm) DeepCopy() *Swarm {
	if in == nil {
		return nil
	}
	out := new(Swarm)
	in.DeepCopyInto(out)
	return out
}
